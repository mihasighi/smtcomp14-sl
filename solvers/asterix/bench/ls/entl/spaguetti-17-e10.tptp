%------------------------------------------------------------------------------
% File     : 
% Domain   : Separation Logic
% Problem  : Randomly generated entailment of the form F -> \bot (n = 17)
% Version  : 
% English  : A randomly generated entailment with n program variables.
%            Negated equalities and list segments are added at random, with
%            specific paramenters so that about half of the generated
%            entailments are valid (or, equivalently, F is unsatisfiable).
%            Normalization and well-formedness axioms should be enough to
%            decide these entailments.

% Refs     : [NV11] Navarro (2011), Separation Logic + Superposition Calculus
% Source   : [NV11]
% Names    :

% Status   : 
% Syntax   : 
% SPC      : 

% Comments :
%------------------------------------------------------------------------------
%====Include axioms for Lists in Separation Logic
include('Axioms/SepLogicLists.ax').

cnf(premise_1,hypothesis,
    ( ~ x6 = x8 )).

cnf(premise_2,hypothesis,
    ( ~ x6 = x11 )).

cnf(premise_3,hypothesis,
    ( ~ x6 = x16 )).

cnf(premise_4,hypothesis,
    ( ~ x11 = x17 )).

cnf(premise_5,hypothesis,
    ( ~ x3 = x4 )).

cnf(premise_6,hypothesis,
    ( ~ x3 = x11 )).

cnf(premise_7,hypothesis,
    ( ~ x3 = x7 )).

cnf(premise_8,hypothesis,
    ( ~ x3 = x13 )).

cnf(premise_9,hypothesis,
    ( ~ x3 = x9 )).

cnf(premise_10,hypothesis,
    ( ~ x3 = x15 )).

cnf(premise_11,hypothesis,
    ( ~ x9 = x13 )).

cnf(premise_12,hypothesis,
    ( ~ x9 = x17 )).

cnf(premise_13,hypothesis,
    ( ~ x4 = x16 )).

cnf(premise_14,hypothesis,
    ( ~ x1 = x14 )).

cnf(premise_15,hypothesis,
    ( ~ x13 = x16 )).

cnf(premise_16,hypothesis,
    ( heap(sep(ls(x10, x12), sep(ls(x16, x14), sep(ls(x16, x1), sep(ls(x1, x3), sep(ls(x1, x8), sep(ls(x17, x14), sep(ls(x17, x16), sep(ls(x12, x10), sep(ls(x12, x9), sep(ls(x12, x1), sep(ls(x2, x8), sep(ls(x9, x15), sep(ls(x7, x4), sep(ls(x3, x14), emp))))))))))))))) )).

cnf(conclusion_1,negated_conjecture,
    ( x1 = x1
    | ~ heap(emp) )).

