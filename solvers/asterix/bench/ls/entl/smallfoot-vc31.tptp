%------------------------------------------------------------------------------
% File     : 
% Domain   : Separation Logic
% Problem  : Verification Condition generated by Smallfoot
% Version  : 
% English  : This is one of the verification conditions that were gathered
%            from the output of Smallfoot when checking assertions on list
%            manipulating programs from its own benchmark suite.

% Refs     : [Ber06] Berdine (2006), Smallfoot: Modular automatic assertion
%          : [NV11] Navarro (2011), Separation Logic + Superposition Calculus
% Source   : [NV11]
% Names    :

% Status   : 
% Syntax   : 
% SPC      : 

% Comments :
%------------------------------------------------------------------------------
%====Include axioms for Lists in Separation Logic
%include('Axioms/SepLogicLists.ax').

cnf(premise_1,hypothesis,
    ( ~ nil = x1 )).

cnf(premise_2,hypothesis,
    ( ~ nil = x2 )).

cnf(premise_3,hypothesis,
    ( ~ nil = x3 )).

cnf(premise_4,hypothesis,
    ( ~ nil = x4 )).

cnf(premise_5,hypothesis,
    ( ~ nil = x5 )).

cnf(premise_6,hypothesis,
    ( ~ nil = x6 )).

cnf(premise_7,hypothesis,
    ( ~ x1 = x6 )).

cnf(premise_8,hypothesis,
    ( ~ x2 = x6 )).

cnf(premise_9,hypothesis,
    ( ~ x3 = x4 )).

cnf(premise_10,hypothesis,
    ( ~ x3 = x5 )).

cnf(premise_11,hypothesis,
    ( heap(sep(next(x1, x6), sep(ls(x2, x1), sep(next(x6, x2), emp)))) )).

cnf(conclusion_1,negated_conjecture,
    ( x7 = x6
    | ~ heap(sep(ls(x7, x6), sep(next(x6, x7), emp))) )).

