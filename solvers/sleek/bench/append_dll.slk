data node2 {
  node2 prev;
  node2 next;
}.

pred dll<p:node2> == emp & self=null or
  (exists p_20,self_21,q_19: self::node2<p_20,q_19> * q_19::dll<self_21> & 
	                           p_20=p & self_21=self)
  inv true.

pred dll_e1<q> == 
  (exists p1,s,q1: q1::dll<s> * self::node2<p1,q1> & self=s & p1=q).

pred dll_e2<q> ==
  (exists s,p1,p2,n,q1: self::node2<p1,n> * q1::dll<s> & n=q1 & p1=p2 & s=self & p2=q).

pred dll_e3<p> ==
  (exists q: self::dll<q> & q=p).

pred node2_e1<p,q> ==
  (exists p1,n1: self::node2<p1,n1> & p1=p & n1=q).

// (1) id: 0; line: 19; kind: BIND
 checkentail_exact x'::dll_e1<q> * y::dll<p>&x'=x & y'=y & x!=null
 |-  x'::dll_e2<q> * y::dll<p>& x'=x & y'=y & x!=null.
expect Valid.

// (2) id: 2; line: 19; kind: PRE
 checkentail_exact q::dll<self> * y::dll<p> * x'::node2<p1,q>&v'=null & v'=q & x'=x & y'=y & 
x!=null & self=x' & p1=q1
 |-  q::dll<self> * y::dll<p> * x'::node2<p1,q>&v'=null & v'=q & x'=x & y'=y & 
x!=null & self=x' & p1=q1.
expect Valid.
 
// (3) id: 4; line: 19; kind: PRE
 checkentail_exact q::dll<self> * y::dll<p> * x'::node2<p1,q>&v'!=null & v'=q & x'=x & y'=y & 
x!=null & self=x' & p1=q1
 |-  q::dll<self> * y::dll<p> * x'::node2<p1,q>&v'!=null & v'=q & x'=x & y'=y & 
x!=null & self=x' & p1=q1.
expect Valid.

// (4) id: 6; line: 20; kind: BIND
 checkentail_exact q::dll<self> * y::dll<p> * x'::node2<p1,q>&v' & q=null & x'=x & y'=y & 
x!=null & self=x' & p1=q1
 |-  x'::node2_e1<p1,q> * q::dll<self> * y::dll<p>&
     v' & q=null & x'=x & y'=y & x!=null & self=x' & p1=q1.
expect Valid.

// (5) id: 8; line: 21; kind: PRE
 checkentail_exact x'::node2<p,y'>&y'=null & next0=q & v' & q=null & x'=x & y'=y & x!=null & 
self=x' & p=q1
 |-  x'::node2<p,y'>&y'=null & next0=q & v' & q=null & x'=x & y'=y & x!=null & 
self=x' & p=q1.
expect Valid.
 
// (6) id: 10; line: 21; kind: PRE
 checkentail_exact q::dll<self> * y::dll<p> * x'::node2<p1,y'>&y'!=null & next0=q & v' & 
q=null & x'=x & y'=y & x!=null & self=x' & p1=q1
 |-  q::dll<self> * y::dll<p> * x'::node2<p1,y'>&y'!=null & next0=q & v' & 
q=null & x'=x & y'=y & x!=null & self=x' & p1=q1.
expect Valid.

// (7) id: 12; line: 22; kind: BIND
 checkentail_exact y'::dll_e1<p1> * q::dll<self> * 
x'::node2<p,y'>&v' & y'!=null & next0=q & v1' & q=null & x'=x & y'=y & 
x!=null & self=x' & p=q1
 |-  y'::dll_e2<p1> * q::dll<self> * x'::node2<p,y'>& v' & 
y'!=null & next0=q & v1' & q=null & x'=x & y'=y & x!=null & self=x' & p=q1.
expect Valid.


// (8) id: 14; line: 25; kind: BIND
 checkentail_exact q::dll<self> * y::dll<p> * x'::node2<p1,q>&!(v') & q!=null & x'=x & y'=y & 
x!=null & self=x' & p1=q1
 |-  x'::node2_e1<p1,q> * q::dll<self> * y::dll<p>& 
     !(v') & q!=null & x'=x & y'=y & x!=null & self=x' & p1=q1.
expect Valid.

// (9) id: 16; line: 25; kind: PRE_REC
 checkentail_exact q::dll<self> * y::dll<p> * x'::node2<p1,q>&v1'=q & !(v') & q!=null & x'=x & 
y'=y & x!=null & self=x' & p1=q1
 |-  v1'::dll_e3<self> * y'::dll_e3<p> * x'::node2<p1,q>& 
v1'=q & !(v') & q!=null & x'=x & y'=y & x!=null & self=x' & 
p1=q1 & v1'!=null.
expect Valid.

// (10) id: 20; line: 16; kind: POST
 checkentail_exact q::dll<self1> * q1::dll<self> * x'::node2<p,y'> * y'::node2<x',q>&
prev0=p1 & v' & y'!=null & next0=q1 & v1' & q1=null & x'=x & y'=y & 
x!=null & self=x' & p=q2 & self1=y' & p1=p2
 |-  x::dll_e3<q2> * q1::dll<self>&prev0=p1 & v' & y'!=null & 
next0=q1 & v1' & q1=null & x'=x & y'=y & x!=null & self=x' & p=q2 & 
self1=y' & p1=p2.
expect Valid.

