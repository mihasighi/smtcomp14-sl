data node2 {
  int val;
  node2 prev;
  node2 next;
}.
 pred dll<p:node2,n:int> == 
  emp&self=null & n=0 or
(exists p_23,self_24,
  flted_12_22: self::node2<Anon_13,p_23,q> * q::dll<self_24,flted_12_22>&
  flted_12_22+1=n & p_23=p & self_24=self)
  inv 0<=n.
 
// id: 1; line: 20; kind: BIND
 checkentail_exact (exists p_1050,self_1051,flted_12_1052,Anon_1053,
q_1054: x'::node2<Anon_1053,p_1050,q_1054> * 
q_1054::dll<self_1051,flted_12_1052> * y::dll<p,n>&flted_12_1052+1=m & 
p_1050=q & self_1051=x' & 0<m & y'=y & x'=x)
 |-  (exists flted_12_1058,self_1057,Anon_1059,p_1056,
q_1060: x'::node2<val_20_1000',prev_20_1001',next_20_1002'>@L * 
q_1060::dll<self_1057,flted_12_1058> * y::dll<p,n>&flted_12_1058+1=m & 
p_1056=q & self_1057=x' & 0<m & y'=y & x'=x & val_20_1000'=Anon_1059 & 
prev_20_1001'=p_1056 & next_20_1002'=q_1060).
expect Valid.
 
// id: 3; line: 20; kind: PRE
 checkentail_exact x'::node2<Anon_1059,p_1056,q_1060> * q_1060::dll<self_1057,flted_12_1058> * 
y::dll<p,n>&flted_12_1058+1=m & p_1056=q & self_1057=x' & 0<m & y'=y & 
x'=x & v_node2_20_1003'=q_1060 & v_node2_20_1003'=null
 |-  x'::node2<Anon_1059,p_1056,q_1060> * q_1060::dll<self_1057,flted_12_1058> * 
y::dll<p,n>&flted_12_1058+1=m & p_1056=q & self_1057=x' & 0<m & y'=y & 
x'=x & v_node2_20_1003'=q_1060 & v_node2_20_1003'=null.
expect Valid.
 
// id: 7; line: 21; kind: BIND
 checkentail_exact x'::node2<Anon_1059,p_1056,q_1060> * q_1060::dll<self_1057,flted_12_1058> * 
y::dll<p,n>&flted_12_1058+1=m & p_1056=q & self_1057=x' & 0<m & y'=y & 
x'=x & q_1060=null & v_bool_20_1015' & q_1060=null & v_bool_20_1015'
 |-  x'::node2<val_21_1004',prev_21_1005',next_21_1006'> * 
q_1060::dll<self_1057,flted_12_1058> * y::dll<p,n>&flted_12_1058+1=m & 
p_1056=q & self_1057=x' & 0<m & y'=y & x'=x & q_1060=null & 
v_bool_20_1015' & q_1060=null & v_bool_20_1015' & val_21_1004'=Anon_1059 & 
prev_21_1005'=p_1056 & next_21_1006'=q_1060.
expect Valid.
 
// id: 9; line: 22; kind: PRE
 checkentail_exact x'::node2<Anon_1059,p_1056,y'>&q_1060=null & flted_12_1058=0 & 
q_1060=null & n=0 & flted_12_1058+1=m & p_1056=q & self_1057=x' & 0<m & 
y'=y & x'=x & q_1060=null & v_bool_20_1015' & q_1060=null & 
v_bool_20_1015' & next_21_1070=q_1060 & y'=null
 |-  x'::node2<Anon_1059,p_1056,y'>&q_1060=null & flted_12_1058=0 & 
q_1060=null & n=0 & flted_12_1058+1=m & p_1056=q & self_1057=x' & 0<m & 
y'=y & x'=x & q_1060=null & v_bool_20_1015' & q_1060=null & 
v_bool_20_1015' & next_21_1070=q_1060 & y'=null.
expect Valid.
 
// id: 11; line: 22; kind: PRE
 checkentail_exact q_1060::dll<self_1057,flted_12_1058> * y::dll<p,n> * 
x'::node2<Anon_1059,p_1056,y'>&flted_12_1058+1=m & p_1056=q & self_1057=x' & 
0<m & y'=y & x'=x & q_1060=null & v_bool_20_1015' & q_1060=null & 
v_bool_20_1015' & next_21_1070=q_1060 & y'!=null
 |-  q_1060::dll<self_1057,flted_12_1058> * y::dll<p,n> * 
x'::node2<Anon_1059,p_1056,y'>&flted_12_1058+1=m & p_1056=q & self_1057=x' & 
0<m & y'=y & x'=x & q_1060=null & v_bool_20_1015' & q_1060=null & 
v_bool_20_1015' & next_21_1070=q_1060 & y'!=null.
expect Valid.
 
// id: 13; line: 23; kind: BIND
 checkentail_exact (exists p_1170,self_1171,flted_12_1172,Anon_1173,
q_1174: q_1060::dll<self_1057,flted_12_1058> * 
y'::node2<Anon_1173,p_1170,q_1174> * q_1174::dll<self_1171,flted_12_1172> * 
x'::node2<Anon_1059,p_1056,y'>&flted_12_1172+1=n & p_1170=p & self_1171=y' & 
flted_12_1058+1=m & p_1056=q & self_1057=x' & 0<m & y'=y & x'=x & 
q_1060=null & v_bool_20_1015' & q_1060=null & v_bool_20_1015' & 
next_21_1070=q_1060 & y'!=null & v_bool_22_1010' & y'!=null & 
v_bool_22_1010')
 |-  (exists flted_12_1178,self_1177,Anon_1179,p_1176,
q_1180: y'::node2<val_23_1007',prev_23_1008',next_23_1009'> * 
q_1060::dll<self_1057,flted_12_1058> * 
q_1180::dll<self_1177,flted_12_1178> * x'::node2<Anon_1059,p_1056,y'>&
flted_12_1178+1=n & p_1176=p & self_1177=y' & flted_12_1058+1=m & p_1056=q & 
self_1057=x' & 0<m & y'=y & x'=x & q_1060=null & v_bool_20_1015' & 
q_1060=null & v_bool_20_1015' & next_21_1070=q_1060 & y'!=null & 
v_bool_22_1010' & y'!=null & v_bool_22_1010' & val_23_1007'=Anon_1179 & 
prev_23_1008'=p_1176 & next_23_1009'=q_1180).
expect Valid.
 
// id: 15; line: 26; kind: BIND
 checkentail_exact x'::node2<Anon_1059,p_1056,q_1060> * q_1060::dll<self_1057,flted_12_1058> * 
y::dll<p,n>&flted_12_1058+1=m & p_1056=q & self_1057=x' & 0<m & y'=y & 
x'=x & q_1060!=null & !(v_bool_20_1015') & q_1060!=null & !(v_bool_20_1015')
 |-  x'::node2<val_26_1011',prev_26_1012',next_26_1013'>@L * 
q_1060::dll<self_1057,flted_12_1058> * y::dll<p,n>&flted_12_1058+1=m & 
p_1056=q & self_1057=x' & 0<m & y'=y & x'=x & q_1060!=null & 
!(v_bool_20_1015') & q_1060!=null & !(v_bool_20_1015') & 
val_26_1011'=Anon_1059 & prev_26_1012'=p_1056 & next_26_1013'=q_1060.
expect Valid.
 
// id: 17; line: 26; kind: PRE_REC
 checkentail_exact x'::node2<Anon_1059,p_1056,q_1060> * q_1060::dll<self_1057,flted_12_1058> * 
y::dll<p,n>&flted_12_1058+1=m & p_1056=q & self_1057=x' & 0<m & y'=y & 
x'=x & q_1060!=null & !(v_bool_20_1015') & q_1060!=null & 
!(v_bool_20_1015') & v_node2_26_1014'=q_1060
 |-  v_node2_26_1014'::dll<q_1187,m_1188> * y'::dll<p_1189,n_1190> * 
x'::node2<Anon_1059,p_1056,q_1060>&0<m_1188 & 0<m_1188 & flted_12_1058+1=m & 
p_1056=q & self_1057=x' & 0<m & y'=y & x'=x & q_1060!=null & 
!(v_bool_20_1015') & q_1060!=null & !(v_bool_20_1015') & 
v_node2_26_1014'=q_1060 & q_1187=self_1057 & m_1188=flted_12_1058 & 
p_1189=p & n_1190=n.
expect Valid.
 
// id: 21; line: 18; kind: POST
 checkentail_exact q_1060::dll<self_1057,flted_12_1058> * 
q_1180::dll<self_1177,flted_12_1178> * x'::node2<Anon_1059,p_1056,y'> * 
y'::node2<Anon_1179,x',q_1180>&flted_12_1178+1=n & p_1176=p & self_1177=y' & 
flted_12_1058+1=m & p_1056=q & self_1057=x' & 0<m & y'=y & x'=x & 
q_1060=null & v_bool_20_1015' & q_1060=null & v_bool_20_1015' & 
next_21_1070=q_1060 & y'!=null & v_bool_22_1010' & y'!=null & 
v_bool_22_1010' & prev_23_1181=p_1176
 |-  (exists flted_18_51,q_54,Anon_1199,q_1200,Anon_1211,
q_1212: x::dll<q_54,flted_18_51> * q_1060::dll<self_1057,flted_12_1058>&
flted_18_51=n+m & q_54=q & flted_12_1178+1=n & p_1176=p & self_1177=y' & 
flted_12_1058+1=m & p_1056=q & self_1057=x' & 0<m & y'=y & x'=x & 
q_1060=null & v_bool_20_1015' & q_1060=null & v_bool_20_1015' & 
next_21_1070=q_1060 & y'!=null & v_bool_22_1010' & y'!=null & 
v_bool_22_1010' & prev_23_1181=p_1176 & Anon_1199=Anon_1059 & q_1200=y' & 
Anon_1211=Anon_1179 & q_1212=q_1180 & exists(self_1208:x'=self_1208) & 
exists(flted_12_1209:flted_12_1178+1=flted_12_1209) & 
exists(flted_18_1198:flted_12_1178+1+1=flted_18_1198) & 
exists(q_1197:p_1056=q_1197)).
expect Valid.
 
// id: 29; line: 18; kind: POST
 checkentail_exact x'::node2<Anon_1059,p_1056,y'>&q_1060=null & flted_12_1058=0 & 
q_1060=null & n=0 & flted_12_1058+1=m & p_1056=q & self_1057=x' & 0<m & 
y'=y & x'=x & q_1060=null & v_bool_20_1015' & q_1060=null & 
v_bool_20_1015' & next_21_1070=q_1060 & y'=null & !(v_bool_22_1010') & 
y'=null & !(v_bool_22_1010')
 |-  (exists flted_18_51,q_54,Anon_1227,q_1228: x::dll<q_54,flted_18_51>&
flted_18_51=n+m & q_54=q & q_1060=null & flted_12_1058=0 & q_1060=null & 
n=0 & flted_12_1058+1=m & p_1056=q & self_1057=x' & 0<m & y'=y & x'=x & 
q_1060=null & v_bool_20_1015' & q_1060=null & v_bool_20_1015' & 
next_21_1070=q_1060 & y'=null & !(v_bool_22_1010') & y'=null & 
!(v_bool_22_1010') & Anon_1227=Anon_1059 & q_1228=y' & 
exists(flted_18_1226:0+1=flted_18_1226) & exists(q_1225:p_1056=q_1225)).
expect Valid.
 
// id: 35; line: 18; kind: POST
 checkentail_exact (exists flted_18_1196: x'::node2<Anon_1059,p_1056,q_1060> * 
q_1060::dll<q_1187,flted_18_1196>&flted_12_1058+1=m & p_1056=q & 
self_1057=x' & 0<m & y'=y & x'=x & q_1060!=null & !(v_bool_20_1015') & 
q_1060!=null & !(v_bool_20_1015') & q_1187=self_1057 & 
m_1188=flted_12_1058 & p_1189=p & n_1190=n & 0<=n & 0<=flted_12_1058 & 
flted_18_1196=n_1190+m_1188 & 0<=m_1188 & 0<=n_1190)
 |-  (exists flted_18_51,q_54,Anon_1245,q_1246,
flted_18_1242: x::dll<q_54,flted_18_51>&flted_18_51=n+m & q_54=q & 
flted_12_1058+1=m & p_1056=q & self_1057=x' & 0<m & y'=y & x'=x & 
q_1060!=null & !(v_bool_20_1015') & q_1060!=null & !(v_bool_20_1015') & 
q_1187=self_1057 & m_1188=flted_12_1058 & p_1189=p & n_1190=n & 0<=n & 
0<=flted_12_1058 & flted_18_1242=n_1190+m_1188 & 0<=m_1188 & 0<=n_1190 & 
Anon_1245=Anon_1059 & q_1246=q_1060 & exists(q_1243:p_1056=q_1243) & 
exists(flted_18_1244:flted_18_1242+1=flted_18_1244)).
expect Valid.
